{"version":3,"sources":["BooksAPI.js","BookshelfChanger.js","Book.js","Searchbooks.js","Bookshelf.js","Addbook.js","Booklist.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","concat","then","res","json","data","book","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","BookshelfChanger","props","path","document","location","pathname","shelfChange","onShelfChange","addToShelf","addBook","react_default","a","createElement","className","value","data-bookid","index","onChange","e","disabled","Book","style","width","height","backgroundImage","url","src_BookshelfChanger","title","authors","Searchbooks","this","updateQuery","_this","Link","to","type","placeholder","target","books","map","key","src_Book","imageLinks","thumbnail","Component","Bookshelf","toLowerCase","replace","Addbook","Booklist","src_Bookshelf","src_Addbook","BooksApp","state","query","results","bookShelfChangeHandler","event","selectedIndex","Number","selectedOption","setState","BooksAPI","trim","addToList","bookid","getAttribute","bookList","counter","shelvedBook","length","push","b","_this2","debounceEvent","debounce","apply","arguments","persist","_this3","prev","_this4","Array","isArray","undefined","hasOwnProperty","_this5","Route","render","src_Searchbooks","exact","src_Booklist","React","ReactDOM","BrowserRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.eb0ef1c1.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\nfunction BookshelfChanger (props) {\r\n    let path = document.location.pathname;\r\n    let shelfChange = props.onShelfChange;\r\n    let addToShelf = props.addBook;\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select\r\n            value={props.shelf}\r\n            data-bookid={props.id}\r\n            id={props.index}\r\n            className={props.shelf}\r\n            onChange={(e) => path === '/' ? shelfChange()()()(e) : addToShelf()()(e)} // Choose function to run depending on the page\r\n            >\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default BookshelfChanger;","import React from 'react';\r\nimport BookshelfChanger from './BookshelfChanger';\r\n\r\nfunction Book (props) {\r\n        return (\r\n                <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${ props.url })` }}></div>\r\n                        <BookshelfChanger\r\n                        id={props.id}\r\n                        index={props.index}\r\n                        shelf={props.shelf}\r\n                        onShelfChange={() => props.onShelfChange}\r\n                        addBook={() => props.addBook}\r\n                        />\r\n                </div>\r\n                <div className=\"book-title\">{ props.title }</div>\r\n                <div className=\"book-authors\">{ props.authors }</div>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass Searchbooks extends Component {\r\n\r\n  componentWillUnmount() {\r\n    this.props.updateQuery('');\r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input type=\"text\" placeholder=\"Search by title or author\" onChange={(e) => this.props.updateQuery(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n          {\r\n            this.props.books ? (\r\n            this.props.books.map(book => {\r\n              return (\r\n              <li key={book.id}>\r\n                <Book\r\n                id={book.id}\r\n                shelf={book.shelf}\r\n                addBook={() => this.props.addBook}\r\n                title={book.title}\r\n                authors={book.authors}\r\n                url={book.imageLinks ? book.imageLinks.thumbnail : null}\r\n                />\r\n              </li>\r\n              );\r\n            })\r\n            ) : (null)\r\n          }\r\n          </ol>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbooks;","import React from 'react';\r\nimport Book from './Book';\r\n\r\nfunction Bookshelf(props) {\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {props.books.map((book, index) => {\r\n                    return (\r\n                        book.shelf.toLowerCase() === props.title.replace(/\\s/g, '').toLowerCase() ? (\r\n                        <li key={book.id}>\r\n                            <Book\r\n                            index={index}\r\n                            shelf={book.shelf}\r\n                            onShelfChange={() => props.onShelfChange}\r\n                            title={book.title}\r\n                            authors={book.authors}\r\n                            url={book.imageLinks.thumbnail} />\r\n                        </li>\r\n                        ) : (null)\r\n                    );\r\n                })}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookshelf;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Addbook() {\r\n        return (\r\n            <div className=\"open-search\">\r\n                <Link to=\"/search\">Add a book</Link>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Addbook;","import React from 'react';\r\nimport Bookshelf from './Bookshelf';\r\nimport Addbook from './Addbook';\r\n\r\nfunction Booklist(props) {\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <Bookshelf\r\n                onShelfChange={() => props.onShelfChange}\r\n                books={props.books}\r\n                title=\"Currently Reading\" />\r\n                <Bookshelf\r\n                onShelfChange={() => props.onShelfChange}\r\n                books={props.books}\r\n                title=\"Read\" />\r\n                <Bookshelf\r\n                onShelfChange={() => props.onShelfChange}\r\n                books={props.books}\r\n                title=\"Want to Read\" />\r\n            </div>\r\n            <Addbook />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Booklist;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport Searchbooks from './Searchbooks';\r\nimport Booklist from './Booklist';\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    query: '',\r\n    books: [],\r\n    results: []\r\n  }\r\n\r\n  /*\r\n   * Debounce function\r\n   */\r\n  debounceEvent(...args) {\r\n    this.debounceEvent = debounce(...args);\r\n    return e => {\r\n      e.persist();\r\n      return this.debounceEvent(e);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    /*\r\n     * Get all books in the shelves\r\n     */\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prev) {\r\n    /*\r\n     * Implement debouncer on search calls\r\n     */\r\n    this.debounceEvent(() => {\r\n      let query = this.state.query;\r\n      if (query !== prev.query && query === '') { // Prevent error from api call caused by empty search query\r\n        query = ' ';\r\n      }\r\n      if(query !== prev.query) {\r\n        BooksAPI.search(query).then((results) => {\r\n          if (Array.isArray(results)) {\r\n            this.setState(() => ({\r\n              results: results.map(book => {\r\n                book.shelf = 'none';\r\n                this.state.books.map(shelvedBook => {\r\n                  if (shelvedBook.id === book.id) {\r\n                    book.shelf = shelvedBook.shelf;\r\n                  }\r\n                  return book;\r\n                })\r\n                return book;\r\n              })\r\n            }))\r\n          }\r\n          if ((results !== undefined && results.hasOwnProperty('error'))) { // Check for errors\r\n            this.setState({ results: [] });\r\n          }\r\n        })\r\n      };\r\n    }, 1000)\r\n  }\r\n\r\n  bookShelfChangeHandler = (event) => {\r\n    /*\r\n     * Move book from one shelf to the selected shelf\r\n     */\r\n    let selectedIndex = Number(event.target.id);\r\n    let selectedOption = event.target.value;\r\n    this.setState((state) => ({\r\n      books: state.books.map((book, index) => {\r\n        if (index === selectedIndex) {\r\n          book.shelf = selectedOption;\r\n          BooksAPI.update(book, selectedOption);\r\n        }\r\n        return book;\r\n      })\r\n    }));\r\n  }\r\n\r\n  updateQuery = (query) => {\r\n    this.setState({ query: query.trim() });\r\n  }\r\n\r\n  addToList = (event) => {\r\n    let shelf = event.target.value;\r\n    let bookid = event.target.getAttribute('data-bookid');\r\n    let bookList = this.state.books;\r\n    BooksAPI.get(bookid).then((book) => {\r\n      book.shelf = shelf;\r\n      let counter = 0; // Check against bookList length\r\n      bookList.map(shelvedBook => {\r\n        if (book.id !== shelvedBook.id) {\r\n          counter++;\r\n        }\r\n        if (counter === bookList.length) {\r\n          this.setState(() => ({ // Add book if not already present in any of the shelves\r\n            books: this.state.books.push(book)\r\n          }))\r\n        }\r\n        return book;\r\n      });\r\n      this.setState(() => ({\r\n        books: bookList.map(b => {\r\n          if (b.id === book.id) {\r\n            b.shelf = shelf; // Update shelf\r\n          }\r\n          return b;\r\n        })\r\n      }))\r\n      BooksAPI.update(book, shelf);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/search\" render={() => (\r\n          <Searchbooks books={this.state.results}\r\n          updateQuery={(query) => this.updateQuery(query)}\r\n          addBook={this.addToList} />\r\n        )} />\r\n\r\n        <Route exact path=\"/\" render={() => (\r\n          <Booklist books={this.state.books}\r\n          onShelfChange={this.bookShelfChangeHandler} />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}